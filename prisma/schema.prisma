generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int       @id @default(autoincrement())
  outlet    String
  owner     String
  contact   String
  gst       String?
  location  String
  createdAt DateTime  @default(now())

  shipmentItems ShipmentItem[]
  invoices      Invoice[]
  sales         Sale[]
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  costPrice    Float
  sellingPrice Float    @default(0)
  weight       Float
  createdAt    DateTime @default(now())

  stocks         Stock[]
  shipmentItems  ShipmentItem[]
  invoiceItems   InvoiceItem[]
}

model Capital {
  id                Int      @id @default(autoincrement())
  name              String   @unique
  amount            Float    @default(0)
  remaining         Float
  status            String   @default("open")
  permanentlyClosed Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())

  stocks    Stock[]
  shipments Shipment[]
}

model Stock {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  capital    Capital  @relation(fields: [capitalId], references: [id])
  capitalId  Int
  quantity   Int
  createdAt  DateTime @default(now())
}

model ExpenseType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())

  shipmentExpenses ShipmentExpense[]
}

model Shipment {
  id           Int               @id @default(autoincrement())
  name         String            @unique
  shipmentDate DateTime
  createdAt    DateTime          @default(now())
  status       String            @default("in transit")
  capital      Capital           @relation(fields: [capitalId], references: [id])
  capitalId    Int

  items        ShipmentItem[]
  expenses     ShipmentExpense[]
  invoices     Invoice[]
}

model ShipmentItem {
  id          Int       @id @default(autoincrement())
  shipment    Shipment  @relation(fields: [shipmentId], references: [id])
  shipmentId  Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  customerId  Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  quantity    Int
}

model ShipmentExpense {
  id            Int         @id @default(autoincrement())
  shipment      Shipment    @relation(fields: [shipmentId], references: [id])
  shipmentId    Int
  expenseType   ExpenseType @relation(fields: [expenseTypeId], references: [id])
  expenseTypeId Int
  amount        Float
}

model Invoice {
  id           Int           @id @default(autoincrement())
  shipment     Shipment      @relation(fields: [shipmentId], references: [id])
  shipmentId   Int
  customer     Customer      @relation(fields: [customerId], references: [id])
  customerId   Int
  dueDate      DateTime
  shippingCost Float
  status       String        @default("unpaid")
  code         String        @unique
  createdAt    DateTime      @default(now())

  items        InvoiceItem[]
  sale         Sale?
}

model InvoiceItem {
  id         Int      @id @default(autoincrement())
  invoice    Invoice  @relation(fields: [invoiceId], references: [id])
  invoiceId  Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
  price      Float
}

model Sale {
  id         Int      @id @default(autoincrement())
  invoice    Invoice  @relation(fields: [invoiceId], references: [id])
  invoiceId  Int      @unique
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  amount     Float
  paidAt     DateTime @default(now())
}
